@model DalaWeb.Domain.Entities.Abonents.Abonent

@{
    ViewBag.Title = "Редактирование";
}

<script src="~/Scripts/jquery.unobtrusive-ajax.js"></script>
<script src="~/Scripts/jquery.unobtrusive-ajax.min.js"></script>
<script src="~/Scripts/jquery-1.9.1.min.js"></script>
<script src="~/Scripts/jquery-1.9.1.js"></script>

<h1>Информационная страница абонента @Model.Name</h1>
@*@{
    int Id = Model.AbonentId;    
}*@



@helper RenderService(IEnumerable<DalaWeb.Domain.Entities.Services.AbonentService> items)
{
    <table>
        <tr>
            <th>
                Название
            </th>
            <th>
                Цена
            </th>
            <th>
                Тип
            </th>
            <th>
                Поставщик
            </th>
            <th>
                Дата подключения
            </th>
            <th>
                Счетчик
            </th>
            <th>
                Пломба
            </th>
            <th>
                Статус
            </th>
        </tr>
        @foreach (var item in items)
        {
        <tr>
            <td>
                @Html.ActionLink(item.Service.Name, "Details", "AbonentService", new { abonentId = item.AbonentId, serviceId = item.ServiceId, startDate = item.StartDate }, null)
            </td>
            <td>
                @Html.ActionLink(item.Service.Price.ToString(), "Details", "AbonentService", new { abonentId = item.AbonentId, serviceId = item.ServiceId, startDate = item.StartDate }, null)
            </td>
            <td>
                @Html.ActionLink(item.Service.ToString(), "Details", "AbonentService", new { abonentId = item.AbonentId, serviceId = item.ServiceId, startDate = item.StartDate }, null)
            </td>
            <td>
                @Html.ActionLink(item.Service.ServiceCompany.Name, "Details", "AbonentService", new { abonentId = item.AbonentId, serviceId = item.ServiceId, startDate = item.StartDate }, null)
            </td>
            <td>
                @Html.ActionLink(item.StartDate.ToShortDateString(), "Details", "AbonentService", new { abonentId = item.AbonentId, serviceId = item.ServiceId, startDate = item.StartDate }, null)
            </td>


            @{
            if (item.Service.Type == 3)
            {

                DalaWeb.Domain.Entities.Counters.Counter counter = item.Service.Counters.Where(x => x.AbonentId == item.AbonentId).Where(x => x.isOff == false).FirstOrDefault();

                if (counter != null)
                {
                <td>
                    @Html.ActionLink(counter.Name, "Details", "Counter", new { id = counter.CounterId }, null)
                </td>
                <td>

                    @if (!counter.Stamps.Where(s => s.isOff == false).Any())
                        {
                        @Html.ActionLink("Добавить пломбу", "Create", "Stamp", new { counterId = counter.CounterId }, null)
                        }
                        else
                        {
                        @Html.ActionLink(counter.Stamps.Where(s => s.isOff == false).LastOrDefault().Name, "Details", "Stamp", new { id = counter.Stamps.Where(s => s.isOff == false).LastOrDefault().StampId }, null)
                        }
                </td>
                }
                else
                {
                    DalaWeb.Domain.Entities.Counters.Counter LastCounter = item.Service.Counters.Where(x => x.AbonentId == item.AbonentId).Where(x => x.isOff == true).LastOrDefault();
                <td>
                    @if (LastCounter == null)
                        {
                        @Html.ActionLink("Подключить счетчик", "Create", "Counter", new { abonentId = Model.AbonentId, serviceId = item.Service.ServiceId, StartDate = item.StartDate }, null)
                        }
                        else
                        {
                        @Html.ActionLink("Подключить счетчик", "Create", "Counter", new { abonentId = Model.AbonentId, serviceId = item.Service.ServiceId, StartDate = LastCounter.FinishDate.AddDays(1.0) }, null)
                        }
                </td>
                <td>
                    <p>
                        ---
                    </p>
                </td>
                }

            }
            else
            {
                <td>
                    <p>
                        ---
                    </p>
                </td>
                <td>
                    <p>
                        ---
                    </p>
                </td>
            }
            }

            <td>
                @if (@item.isOff)
                    {
                    <span class="label label-warning">Отключено</span>
                    }
                    else
                    {
                    <span class="label label-success">Подключено</span>
                    }
            </td>
        </tr>
        }
    </table>
}
<table>
    <tr>
        <td>
            <h2>Общая информация</h2>
            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()
                @Html.ValidationSummary(true)
                <table>
                    @Html.HiddenFor(model => model.AbonentId)
                    <tr>
                        <td>
                            <div class="editor-label">
                                @Html.LabelFor(model => model.Name)
                            </div>
                        </td>
                        <td>
                            <div class="editor-field">
                                @Html.EditorFor(model => model.Name)
                                @Html.ValidationMessageFor(model => model.Name)
                            </div>
                        </td>
                    </tr>
                    <tr>
                        <td>
                            <div class="editor-label">
                                @Html.LabelFor(model => model.AbonentNumber)
                            </div>
                        </td>
                        <td align="center">
                            @if (!String.IsNullOrEmpty(Model.AbonentNumber))
                            {
                                <div class="editor-field">
                                    @Html.HiddenFor(model => model.AbonentNumber)
                                    @Html.Label(@Model.AbonentNumber, new { @style = "text-align: center" })
                                </div>
                            }
                            else
                            {
                                <span style="font-size: 16px; align-content: center" class="label label-info">Добавьте адрес</span>
                            }
                        </td>
                    </tr>
                    <tr>
                        <td>
                            <div class="editor-label">
                                @Html.LabelFor(model => model.Telephone)
                            </div>
                        </td>
                        <td>
                            <div class="editor-field">
                                @Html.EditorFor(model => model.Telephone)
                                @Html.ValidationMessageFor(model => model.Telephone)
                            </div>
                        </td>
                    </tr>
                    <tr>
                        <td>
                            <div class="editor-label">
                                @Html.LabelFor(model => model.INN)
                            </div>
                        </td>
                        <td>
                            <div class="editor-field">
                                @Html.EditorFor(model => model.INN)
                                @Html.ValidationMessageFor(model => model.INN)
                            </div>
                        </td>
                    </tr>
                    <tr>
                        <td>
                            <div class="editor-label">
                                @Html.LabelFor(model => model.NumberOfInhabitants)
                            </div>
                        </td>
                        <td>
                            <div class="editor-field">
                                @Html.EditorFor(model => model.NumberOfInhabitants)
                                @Html.ValidationMessageFor(model => model.NumberOfInhabitants)
                            </div>
                        </td>
                    </tr>
                    <tr>
                        <td>
                            <div class="editor-label">
                                Адрес
                            </div>
                        </td>
                        @if (Model.Address != null)
                        {
                            <td>
                                @Html.ActionLink((string)ViewBag.City + " " +
                                                        (string)ViewBag.Street + " " +
                                                        @Model.Address.House, "Edit", "Address", new { abonentId = Model.Address.AbonentId }, null)
                            </td>
                        }
                        else
                        {
                            <td>
                                @Html.ActionLink("Добавить адрес", "Create", "Address", new { abonentId = Model.AbonentId }, null)
                            </td>
                        }

                    </tr>
                    <tr>
                        <td></td>
                        <td>
                            <input type="submit" value="Сохранить" class="btn btn-default" />
                        </td>
                    </tr>
                </table>
            }
            
        </td>
    </tr>
    <tr>
        <td valign="top">
            <p>
                <table>
                    <tr>
                        <td>
                            <h2>
                                Баланc:  
                            </h2>
                        </td>
                        <td>
                            @if (Model.Payments.Any())
                            {
                                <h3 id="balance">
                                    @Model.Payments.LastOrDefault().Balance.ToString("F2")
                                </h3>
                            }
                            else
                            {
                                <h3>
                                    Абонент платежей не совершал
                                </h3>
                            }

                        </td>
                        <td valign="bottom" align="center">

                            @using (Ajax.BeginForm(actionName: "Recalculation", controllerName: "Payment", htmlAttributes: new { abonentId = Model.AbonentId }, routeValues: null, ajaxOptions: new AjaxOptions() { UpdateTargetId = "balance" }))
                            {
                                @Html.HiddenFor(model => Model.AbonentId)
                                <input type="submit" value="Пересчитать" />
                            }

                        </td>

                    </tr>
                </table>

            </p>
        </td>
    </tr>
    <tr>
        <td valign="top">
            <h2>Сервисы</h2>
            @Html.ActionLink("Добавить сервис", "Create", "AbonentService", new { abonentId = Model.AbonentId }, null)
            @if (Model.AbonentServices.Any())
            {
                @RenderService(Model.AbonentServices.OrderBy(x => x.Service.Type))
            }
        </td>
    </tr>
    <tr>
        <td valign="top">
            <h2>Кредиты</h2>
            @Html.ActionLink("Добавить кредит", "Create", "AbonentCredit", new { abonentId = Model.AbonentId }, null)
            @if (Model.AbonentCredits.Any())
            {
                <table>
                    <tr>
                        <td>
                            <b>Название</b>
                        </td>
                        <td>
                            <b>Сумма</b>
                        </td>
                    </tr>
                    @foreach (var item in Model.AbonentCredits.Where(i => i.AbonentId == Model.AbonentId))
                    {
                        <tr>
                            <td>
                                @Html.ActionLink(item.Credit.Name, "Details", "AbonentCredit", new { abonentId = item.AbonentId, creditId = item.CreditId }, null)
                            </td>
                            <td>
                                @Html.ActionLink(item.Price.ToString(), "Details", "AbonentCredit", new { abonentId = item.AbonentId, creditId = item.CreditId }, null)
                            </td>
                        </tr>
                    }
                </table>
            }
        </td>
    </tr>
</table>

<div>
    @Html.ActionLink("Вернуться", "Index")
</div>

@*@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}*@
