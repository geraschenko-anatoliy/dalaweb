@model DalaWeb.Domain.Entities.Services.AbonentService

@{
    ViewBag.Title = "Создание";
}
<script type="text/javascript">
    var addressGetServicesPath = "@Url.Action("GetServices", "AbonentService")";
</script>

    @*<script type="text/javascript">
        $(document).ready(function () {
            $("#CompanyId").change(function () {
                $("#ServiceId").empty();
                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("GetServices")',
                    dataType: 'json',
                    data: { companyId: $("#CompanyId").val() },
                    success: function (services) {
                        $.each(services, function (i, company) {
                            $("#ServiceId").append('<option value="' + company.Value + '">' +
                             company.Text + '</option>');
                        });
                    },
                    error: function (ex) {
                        alert('Failed to retrieve states.' + ex);
                    }
                });
                return false;
            })
        });
</script>*@

<h2>Создать</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)
    <fieldset>

        <legend>Сервис для @ViewBag.AbonentName</legend>
        @Html.Hidden("AbonentId", (int)@ViewBag.AbonentId)
        @Html.Hidden("FinishDate", (DateTime)@ViewBag.FinishDate)
        @Html.Hidden("isOff", false)

        <div class="editor-label">
            @Html.NameFor(model => model.Service.ServiceCompany.Name)
        </div>
        <div class="editor-field">
            @Html.DropDownList("CompanyId", string.Empty)
            @Html.ValidationMessageFor(model => model.ServiceId)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Service.Name)
        </div>
        <div class="editor-field">
            @Html.DropDownList("ServiceId", new SelectList(string.Empty, "Value", "Text"))
            @Html.ValidationMessageFor(model => model.ServiceId)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.StartDate)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.StartDate)
            @Html.ValidationMessageFor(model => model.StartDate)
        </div>

        <p>
            <input type="submit" value="Создать" />
        </p>
    </fieldset>
}

<div>
    @Html.ActionLink("Вернуться", "Index")
</div>

